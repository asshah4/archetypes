% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/terms.R
\name{terms}
\alias{terms}
\alias{term_archetype}
\alias{term_archetype.character}
\alias{term_archetype.formula}
\alias{term_archetype.lm}
\alias{term_archetype.glm}
\alias{term_archetype.model_fit}
\alias{term_archetype.term_archetype}
\alias{term_archetype.formula_archetype}
\alias{term_archetype.script}
\alias{term_archetype.default}
\alias{tm}
\title{term_archetype records}
\usage{
term_archetype(x = unspecified(), ...)

\method{term_archetype}{character}(
  x,
  side = character(),
  role = character(),
  tier = character(),
  label = character(),
  description = character(),
  distribution = character(),
  operation = character(),
  type = character(),
  subtype = character(),
  ...
)

\method{term_archetype}{formula}(
  x,
  role = list(),
  tier = list(),
  label = list(),
  description = list(),
  distribution = list(),
  type = list(),
  subtype = list(),
  ...
)

\method{term_archetype}{lm}(
  x,
  role = list(),
  tier = list(),
  label = list(),
  description = list(),
  distribution = list(),
  type = list(),
  subtype = list(),
  ...
)

\method{term_archetype}{glm}(
  x,
  role = list(),
  tier = list(),
  label = list(),
  description = list(),
  distribution = list(),
  type = list(),
  subtype = list(),
  ...
)

\method{term_archetype}{model_fit}(
  x,
  role = list(),
  tier = list(),
  label = list(),
  description = list(),
  distribution = list(),
  type = list(),
  subtype = list(),
  ...
)

\method{term_archetype}{term_archetype}(x, ...)

\method{term_archetype}{formula_archetype}(x, ...)

\method{term_archetype}{script}(x, ...)

\method{term_archetype}{default}(x = unspecified(), ...)

tm(x = unspecified(), ...)
}
\arguments{
\item{x}{An object of the following types that can be coerced to a
\code{term_archetype} object. If it is an object that contains multiple terms,
such as \code{formula}, the parameters are pluralized and should be contained
via a list of formulas. See details for further explanation.
\itemize{
\item \code{character}
\item \code{formula}
\item \code{lm}
\item \code{glm}
}}

\item{side}{states the side of the formula the variable belongs on:
\itemize{
\item \strong{left}: for variables that are intended to be dependent
\item \strong{right}: for variables that are intended to be independent
\item \strong{meta}: for variables that are intended to explain relationships
\item \strong{unknown}: for variables that have unknown or undetermined sides, such
as unknown position between other variables (e.g. potential mediators,
conditioning variables, etc)
}}

\item{role}{Specific roles the variable plays within the formula. These are
of particular importance, as they serve as special terms that can effect
how a formula is interpreted. Please see the \emph{Roles} section below for
further details. The options for roles are as below:
\itemize{
\item \strong{outcome}: outcome/dependent variable that serves as an individual
variable in the \eqn{exposure -> outcome} relationship (DEFAULT for LHS variables)
\item \strong{predictor}: predictors of the outcomes (DEFAULT for RHS variables)
\item \strong{exposure}: predictor variable that serves as a primary or key
variable in the \eqn{exposure -> outcome} relationship
\item \strong{confounder}: predictor variable that is thought to be a confounder of
the causal relationship in the \eqn{exposure <- confounder -> outcome}
pathway, normally thought of as an adjustment or controlling variable
\item \strong{mediator}: predictor variable that is thought to be a causal
interm_archetypeediary in the \eqn{exposure -> mediator -> outcome} pathway
\item \strong{unknown}: default role of a variable that has not yet been assigned a
place, such as a potential intermediary object
}}

\item{tier}{Grouping variable names for covariates or \strong{confounders} for
modeling terms together}

\item{label}{Display-quality label describing the variable}

\item{description}{Option for further descriptions or definitions needed for
the term_archetype, potentially part of a data dictionary}

\item{distribution}{If its associated with a data vector, describes the
distribution pattern of the original term_archetype}

\item{operation}{Modification of the term to be applied when
combining with data}

\item{type}{Type of variable, either categorical (qualitative) or
continuous (quantitative)}

\item{subtype}{How the variable itself is more specifically subcategorized,
e.g. ordinal, continuous, dichotomous, etc}

\item{class}{Class of the variable itself, either expected or measured, such
as \code{character} or \code{numeric} or \code{factor}}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\section{Pluralized Arguments}{


For the arguments that would be dispatched for objects that are plural,
e.g. containing multiple terms such as a \code{formula} object, the input should
be wrapped within a \code{list()}.

For example, for the \strong{role} argument, it would be written:

\code{role = list(X ~ "exposure", M ~ "mediator", C ~ "confounder")}

This applies for all others plural objects and arguments.
}

\section{Roles}{


Specific roles the variable plays within the formula. These are of particular
importance, as they serve as special terms that can effect how a formula is
interpreted. The specialized options for roles are as below:
\itemize{
\item \strong{exposure} or \code{X(...)}
\item \strong{outcome} or \code{O(...)} or placement of variable on LHS of formula
\item \strong{confounder} or \code{C(...)}
\item \strong{mediator} or \code{M(...)}
\item \strong{strata} or \code{S(...)}
}

Formulas can be condensed by applying their specific role to individual terms
as a function/wrapper. For example, \code{y ~ X(x1) + x2 + x3}. This would signify
that \code{x1} has the specific role of an exposure.
}

